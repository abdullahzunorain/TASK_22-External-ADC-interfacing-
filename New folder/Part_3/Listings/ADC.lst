C51 COMPILER V9.60.7.0   ADC                                                               09/19/2024 14:49:15 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ADC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ADC.l
                    -st) TABS(2) OBJECT(.\Objects\ADC.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "ADC.h"
   4          #include "math.h"
   5          
   6          sbit DIN =P3^4;
   7          sbit CS  =P3^5;
   8          sbit DCLK=P3^6;
   9          sbit DOUT=P3^7;
  10          
  11          unsigned char ADC_Driver (bit A0, bit A1, bit A2)
  12          {
  13   1        unsigned char i, temp=0;
  14   1        DCLK=0;
  15   1        CS=0;
  16   1        
  17   1        DCLK=0;    DIN=1;     DCLK=1; 
  18   1        DCLK=0;    DIN=A2;     DCLK=1;
  19   1        DCLK=0;    DIN=A1;     DCLK=1;
  20   1        DCLK=0;    DIN=A0;     DCLK=1;
  21   1        DCLK=0;    DIN=1;     DCLK=1; 
  22   1        DCLK=0;    DIN=1;     DCLK=1;
  23   1        DCLK=0;    DIN=1;     DCLK=1;
  24   1        DCLK=0;    DIN=1;     DCLK=1;
  25   1        
  26   1        DCLK = 0;
  27   1        Delay1(10);
  28   1        
  29   1        
  30   1        for(i=0; i<=7; i++)
  31   1        {
  32   2          temp<<=1;
  33   2          DCLK=1;
  34   2          DCLK=0;
  35   2          
  36   2          
  37   2          temp|=DOUT;
  38   2          
  39   2      
  40   2        }
  41   1        CS=1;
  42   1        return temp;
  43   1      }
  44            
  45          float ADC_Temperature ()
  46          {
  47   1        unsigned int temp_value;
  48   1        float T, Temperature;
  49   1        temp_value = ADC_Driver(1,0,1);
  50   1        
  51   1        T =1/((1/298.15)+((1/3380.0) *log((255.0/temp_value)-1)));
  52   1        Temperature= T-273.15;
  53   1        lcd_showstring(0,0,"T: ");
  54   1        lcd_shownum(0,2,(unsigned int)Temperature,2);
C51 COMPILER V9.60.7.0   ADC                                                               09/19/2024 14:49:15 PAGE 2   

  55   1        lcd_showchar(0,4,'.');
  56   1        lcd_shownum(0,5,(unsigned int)(Temperature *1000)%1000,3);
  57   1      //  lcd_showchar(1,6,'C');
  58   1        Delay1(1000);
  59   1        return Temperature; 
  60   1      } 
  61          
  62          unsigned int LDR ()
  63          {
  64   1        unsigned int value, scaledvalue;
  65   1        value = ADC_Driver(0,1,0);
  66   1        scaledvalue =(value*100)/255;
  67   1        
  68   1        lcd_showstring(0,9,"LDR: ");
  69   1        lcd_shownum(0,13,scaledvalue,3);
  70   1        Delay1(1000);
  71   1        return scaledvalue;
  72   1      }
  73          
  74          void AC_Controller()
  75          {
  76   1        float LDR_value;
  77   1        unsigned int Temperature_value;
  78   1        LDR_value=LDR ();
  79   1        Temperature_value=ADC_Temperature ();
  80   1        if(LDR_value>30)
  81   1        {
  82   2          if(Temperature_value<26)
  83   2          {
  84   3            lcd_clear_secondline();
  85   3            lcd_showstring(1,0, "Control: AC OFF");
  86   3            Delay1(10000);
  87   3          }
  88   2          else if(Temperature_value>29)
  89   2          {
  90   3            lcd_clear_secondline();
  91   3            lcd_showstring(1,0,"Control:AC ON");
  92   3            Delay1(10000);
  93   3          }
  94   2        }
  95   1        else
  96   1        {
  97   2          lcd_clear_secondline();
  98   2          lcd_showstring(1,0,"NightTime AC OFF");
  99   2          Delay1(10000);
 100   2        }
 101   1      }
 102          
 103          
 104          
 105          
 106          
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          
 115          

C51 COMPILER V9.60.7.0   ADC                                                               09/19/2024 14:49:15 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    510    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
